library(lattice)
?lattice
library(help ~ lattice)
library(help - lattice)
library(help - lattice)
library(help ~ lattice)
library(help  lattice)
library(help = lattice)
data(enviromental)
data(environmental)
?environmental
xyplot(ozone~radiation, data=environment)
xyplot(ozone~radiation, data=environmental)
xyplot(ozone~radiation, data=environmental,main="Ozone vs Radiation")
temp.cut<-equal.count(environmental$temperature,4)
temp.cut
xyplot(ozone~radiation|temp.cut,data=environmental)
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(1,4))
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(1,4),as.table=TRUE)
xyplot(ozone~radiation|temp.cut,data=environmental,layout=c(1,4),as.table=TRUE,
panel=function(x,y,...){
panel.xyplot(x,y,...)#call the default panel function
fit<-lm(x~y)
panel.abline(fit)
})
xyplot(ozone~radiation|temp.cut,data=environmental,as.table=TRUE,
panel=function(x,y,...){
panel.xyplot(x,y,...)#call the default panel function
fit<-lm(x~y)
panel.abline(fit)
})
xyplot(ozone ~ radiation | temp.cut, data=environmental, as.table=TRUE,
panel=function(x, y, ...){
panel.xyplot(x, y, ...)#call the default panel function
fit<-lm(x ~ y)
panel.abline(fit)
})
xyplot(ozone ~ radiation | temp.cut, data=environmental, as.table=TRUE, pch=20,
panel=function(x, y, ...){
panel.xyplot(x, y, ...)#call the default panel function
fit<-lm(x ~ y)
panel.abline(fit, lwd=2)
})
xyplot(ozone ~ radiation | temp.cut, data=environmental, as.table=TRUE, pch=20,
panel=function(x, y, ...){
panel.xyplot(x, y, ...)#call the default panel function
panel.loess(x,y)
})
xyplot(ozone ~ radiation | temp.cut, data=environmental, as.table=TRUE, pch=20,
panel=function(x, y, ...){
panel.xyplot(x, y, ...)#call the default panel function
fit=lm(x ~ y)
panel.abline(fit, lwd=2)
})
xyplot(ozone ~ radiation | temp.cut, data=environmental, as.table=TRUE, pch=20,
panel=function(x, y, ...){
panel.xyplot(x, y, ...)#call the default panel function
panel.loess(x,y)
})
xyplot(ozone ~ radiation | temp.cut, data=environmental, as.table=TRUE, pch=20,
panel=function(x, y, ...){
panel.xyplot(x, y, ...)#call the default panel function
panel.loess(x,y)
},xlab="Solar Radiation",ylab="Ozone (ppb)", main="Ozone vs Solar Radiation")
wind.cut <- equal.count(environmental$wind,4)
wind.cut
xyplot(ozone ~ radiation | temp.cut * wind.cut, data=environmental, as.table=TRUE, pch=20,
panel=function(x, y, ...){
panel.xyplot(x, y, ...)#call the default panel function
panel.loess(x,y)
},xlab="Solar Radiation",ylab="Ozone (ppb)",
main="Ozone vs Solar Radiation")
splom(~environmental)
histogram(~temperature)
histogram(~temperature, data=environment)
histogram(~temperature, data=environmental)
histogram(~temperature | wind.cut, data=environmental)
histogram(~ozone | wind.cut, data=environmental)
histogram(~ozone | temp.cut * wind.cut, data=environmental)
.5/.25
.25/.5
.75*.3
1-.52
1-.3
.7*.4
.28+.225
.225/.505
1-
.52
.48*.7
.336/.505
.225/.505
.4455446/.6653465
.3/.7
.669643/.4287714
.42/.66
5+4+6
45/3
15/3
1-.75
.25*.3
.52*.7
.364+.075
.075/.439
.52*.7
/.439
.364/.439
.1708428/.8291572
.3/.7
.2060439/.4285714
q()
setwd('C:/Users/bluepills/SomeTests')
require(knitr)
require(markdown)
require(slidify)
library(slidify)
author(test)
author('test')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
yaml
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')}
slidify('index.Rmd')}
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
options(encoding="UTF-8")
slidify('index.Rmd')
slidify('index.Rmd')
options(encoding="Latin-1")
slidify('index.Rmd')
slidify('index.Rmd')
options(encoding="UTF8")
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
options(encoding="UTF16")
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
options(encoding="UTF-16")
slidify('index.Rmd')
options(encoding="UTF32")
slidify('index.Rmd')
options(encoding="UTF8")
slidify('index.Rmd')
options(encoding="UTF-8")
slidify('index.Rmd')
options(encoding="latin-1")
slidify('index.Rmd')
options(encoding="latin1")
slidify('index.Rmd')
options(encoding="latin1")
options(encoding="latin1")
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
pandoc <- function(..., path = 'pandoc', cmdOnly = FALSE){
xargs <- list(...)
nxargs <- names(xargs)
nxargs <-ifelse(nxargs == "", "", sprintf("--%s=", nxargs))
xcmd  <- paste(sprintf('%s%s', nxargs, xargs), collapse = " ")
if (!cmdOnly) {
system(sprintf('%s %s', path, xcmd))
} else {
xcmd
}
}
pandoc <- function(..., path = 'pandoc', cmdOnly = FALSE){
xargs <- list(...)
nxargs <- names(xargs)
nxargs <-ifelse(nxargs == "", "", sprintf("--%s=", nxargs))
xcmd  <- paste(sprintf('%s%s', nxargs, xargs), collapse = " ")
if (!cmdOnly) {
system(sprintf('%s %s', path, xcmd))
} else {
xcmd
}
}
slidify('index.Rmd')
pandoc(write = "beamer", "SLIDES.txt", output = 'example9.pdf',
cmdOnly = FALSE, variable="theme:CambridgeUS")
pandoc(write = "beamer", "SLIDES.txt", output = 'example9.pdf', cmdOnly = FALSE)
pandoc(write = "beamer", output = 'example9.pdf', cmdOnly = FALSE)
slidify('index.Rmd')
browseURL("index.html")
slidify('index.Rmd', options = list(copy_libraries = TRUE, theme = "io2012"))
options = list(framework = "io2012", copy_libraries = TRUE)
slidify('index.Rmd', options)
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
knit2html?
?knit2html
slidify('index.Rmd')
slidify('index.Rmd')
knit2html("index.Rmd")
knit2html("index.Rmd")
slidify('index.Rmd')
knit2html("index.Rmd")
slidify('index.Rmd', options = list(copy_libraries = TRUE, theme = "io2012"))
options
slidify('index.Rmd', options)
knit2html("index.Rmd")
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
sessionInfo()
slidify('index.Rmd')
slidify('index.Rmd')
setwd('C:/Users/bluepills/__repositories__/projectR1/presentation')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
